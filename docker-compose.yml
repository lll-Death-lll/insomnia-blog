services:
  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-db-network

  frontend:
    build:
      context: ./insomnia-blog-frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 5173:5173
    environment:
      NODE_ENV: production
      PORT: 5173
    networks:
      - frontend-backend-network
    depends_on:
      api:
        condition: service_healthy

  api:
    build:
      context: ./insomnia-blog-api
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      USERS: ${USERS}
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - frontend-backend-network
      - backend-db-network
    depends_on:
      db:
        condition: service_healthy

networks:
  frontend-backend-network:
    driver: bridge
  backend-db-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
